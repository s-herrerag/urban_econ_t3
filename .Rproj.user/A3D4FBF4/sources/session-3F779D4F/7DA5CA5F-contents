# Universidad de los Andes
# Clase: Economía Urbana Complementaria 6
# Nombre: Julián D. Naranjo L.

# Cargar el paquete "pacman" que contiene la función p_load
require(pacman)
library(this.path)

p_load(
  tidyverse,   # Paquete principal para manipulación de datos y gráficos
  rio,         # Lectura y escritura de datos en diversos formatos
  viridis,     # Paletas de colores
  tmaptools,   # Herramientas para geocodificación y manipulación de mapas temáticos
  ggsn,        # Barra de escala del mapa en ggplot2 para visualizaciones espaciales
  osmdata      # Acceso a datos de OpenStreetMap
)

# Paquetes de manipulación y análisis espacial
p_load(
  dplyr,       # Paquete para manipulación de datos
  tmap,        # Paquete para visualización de mapas temáticos
  sf,          # Manipulación de datos espaciales
  sp,          # Manipulación de datos espaciales en formato espacial clásico
  rgdal,       # Interacción con la biblioteca GDAL para datos espaciales
  raster,      # Paquete para manipulación y análisis de datos raster
  conleyreg,    # Paquete para realizar análisis de regresión espacial
  ggvoronoi   # Paquete para generar diagramas de Voronoi en ggplot2
)

# Establecer el directorio de trabajo
setwd(this.path::here())

# Conjuntos de Voronoi: Tablero 

# Generar puntos aleatorios
set.seed(321654)
x <- sample(1:200,100)
y <- sample(1:200,100)
points <- data.frame(x, y,
                     distance = sqrt((x-100)^2 + (y-100)^2))
circle <- data.frame(x = 100*(1+cos(seq(0, 2*pi, length.out = 2500))),
                     y = 100*(1+sin(seq(0, 2*pi, length.out = 2500))),
                     group = rep(1,2500))
# Visualizar puntos y Voronoi
ggplot(points) +
  geom_point(aes(x,y,color=distance)) +
  geom_path(data=circle,aes(x,y,group=group))

ggplot(points) +
  geom_voronoi(aes(x,y,fill=distance))

ggplot(points,aes(x,y)) +
  stat_voronoi(geom="path") +
  geom_point()

ggplot(data=points, aes(x=x, y=y, fill=distance)) + 
  geom_voronoi(outline = circle)

# fachero
ggplot(points,aes(x,y)) +
  geom_voronoi(aes(fill=distance),outline=circle,
               color="#4dffb8",size=.125) +
  scale_fill_gradient(low="#4dffb8",high="black",guide=F) +
  theme_void() +
  coord_fixed()

# Ejemplo práctico
SecUrb_SF <- st_read(dsn = "SHP_MGN2018_INTGRD_SECCU.shp")
HPrice_cali <- import("house_prices.rds") %>% as_tibble()

SecUrb_SF <- SecUrb_SF %>%
  filter(MPIO_CDPMP == "76001")

HPrice_cali_sf <- st_as_sf(HPrice_cali, coords = c("lon", "lat"), crs = 4686)
HPrice_cali_sf <- HPrice_cali_sf %>%
  filter(operation_type == "Venta")%>%
  sample_frac(0.05)
HPrice_cali_sp <- as_Spatial(HPrice_cali_sf)
bbox <- st_bbox(SecUrb_SF)
bbox

Hosp_cal <- opq(bbox) %>%
  add_osm_feature(key = "amenity", value = "hospital") %>%
  osmdata_sf()
Hosp_cal_pt <- Hosp_cal$osm_points

Hosp_cal_pt <- Hosp_cal_pt %>%
  filter(healthcare == "hospital") #%>%
  #filter(!is.na(addr.full) & addr.full != "")
  
Hosp_cal_pt$Lat <- st_coordinates(Hosp_cal_pt$geometry)[, 2]
Hosp_cal_pt$Lon <- st_coordinates(Hosp_cal_pt$geometry)[, 1]

mapa <- ggplot() +
  geom_sf(data = SecUrb_SF, color = "gray") +
  geom_sf(data = Hosp_cal_pt, size = 1) +
  labs(title = "Cali: Hospitales") +
  theme_minimal() 
mapa

map <- ggplot(data=Hosp_cal_pt,aes(x = Lon,y = Lat)) +
  geom_blank() +
  theme_minimal() +
  labs(title = "Diagrama de Voronoi Cali: Hospitales") +
  geom_path(stat="voronoi",alpha=.85,size=.25) +
  geom_point(color="blue",size=.25)
map


Hosp_cali <- as.data.frame(Hosp_cal_pt)
Cali_DVoro <- voronoi_polygon(data=Hosp_cali,x = "Lon", y = "Lat")
Cali_DVoro2 = st_as_sf(Cali_DVoro) %>% st_set_crs(., 4686)

HPrice_cali_sf <- st_join(HPrice_cali_sf, Cali_DVoro2)

mapa <- ggplot() +
  geom_sf(data = Cali_DVoro2, color = "gray") +
  geom_sf(data = HPrice_cali_sf, size = 0.05, aes(color = "Price")) +
  geom_sf(data = Hosp_cal_pt, color = "blue", size = 1) +
  labs(title = "Diagrama de Voronoi Cali: Hospitales") +
  theme_minimal() +
  scale_color_manual(values = c(Propiedades = "black", Hospitales = "blue"),
                     name = "Leyenda") +
  scale_size_manual(values = c(HPrices = 1, Hosp = 1)) +
  guides(size = "none", color = guide_legend(override.aes = list(size = c(4, 10)))) +
  coord_sf(xlim = c(-76.628, -76.485), ylim = c(3.601, 3.366)) +
  theme(legend.position = "bottom")  # Mueve la leyenda a la parte inferior
mapa

cbd <- geocode_OSM("Plaza de Cayzedo, Cali", as.sf = TRUE)
cbd_pt <- st_transform(cbd, crs = 4686)
Hosp_cal_pt <- st_transform(Hosp_cal_pt, crs = 4686)

HPrice_cali_sf$dist_cbd <- st_distance(x=HPrice_cali_sf , y=cbd_pt)

## Distancia a muchos puntos
matrix_dist_Hosp <- st_distance(x=HPrice_cali_sf , y=Hosp_cal_pt)

matrix_dist_Hosp[1:5,1:5]

min_dist_hosp <- apply(matrix_dist_Hosp , 1 , min)
min_dist_hosp %>% head()

HPrice_cali_sf$dist_Hosp = min_dist_hosp

HPrice_cali_sf = HPrice_cali_sf %>% 
  mutate(price = price /1000000)

# https://cran.r-project.org/web/packages/conleyreg/vignettes/conleyreg_introduction.html
# https://cran.r-project.org/web/packages/conleyreg/conleyreg.pdf
options(scipen = 999)
modelo <- conleyreg(price ~ rooms + bathrooms + surface_total + dist_cbd + dist_Hosp, data = HPrice_cali_sf, 1000)
modelo

# Para la siguiente clase 
# SPATIAL FIRST DIFFERENCES
# https://github.com/hdruckenmiller/SFD/blob/master/README.md

